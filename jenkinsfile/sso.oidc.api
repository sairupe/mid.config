pipeline {
    agent any
    
    environment {
        // SRC_DIR
        src_dir = 'sso.oidc.api'
        // GITHUB_LINK
        github_ssh = 'git@github.com:sairupe/sso.oidc.api.git'
        github_https = 'https://github.com/sairupe/sso.oidc.api.git'
    }

    stages {
        stage('TOOLS INFO') {
            steps {
                echo ' ---------------------- TOOLS INFO START ----------------------'
                sh 'git --version'
                sh 'mvn -version'
                sh 'java -version'
                sh 'docker info'
                echo ' ---------------------- TOOLS INFO END ----------------------'
            }
        }
        stage('FETCH GIT') {
            steps {
                echo ' ---------------------- FETCH GIT START ----------------------'
                //sh 'rm -fr *'
                //sh 'git clone ${github_https}'
                sh 'mvn -f ./${src_dir}/pom.xml clean package -DskipTests=true'
                sh 'mv ${src_dir}/target/*.jar ./'
                sh "ls *.jar | sed 's/.jar//g' | cut -d '-' -f1 > app_key.txt"
                sh "ls *.jar | sed 's/.jar//g' | cut -d '-' -f2 > version.txt"
                sh "ls *.jar | sed 's/.jar//g' | cut -d '-' -f3 > deploy.txt"
                // sh "ls ${src_dir}/target/*.jar | xargs  -I  '{}'  mv  {}  app.jar" // app.jar in WORKSPACE
                sh "ls *.jar | xargs  -I  '{}'  mv  {}  app.jar" // app.jar in WORKSPACE
                
                //TODO read version and deploy build img tag
                 script{
                    def app_key = sh(returnStdout: true, script: 'cat app_key.txt')
                    echo app_key
                    sh 'ls -al'
                }
                
                sh 'docker build -t 12315:test -f /var/jenkins_home/dockerfile/SrvDockerfile .'
                echo ' ---------------------- FETCH GIT END ----------------------'
            }
        }
        stage('MAVEN PACKAGE') {
            steps {
                echo '---------------------- MAVEN PACKAGE START ----------------------'
                echo '---------------------- MAVEN PACKAGE END ----------------------'
            }
        }
        stage('DOCKER IMAGE BUILD AND PUSH') {
            steps {
                echo '---------------------- DOCKER IMAGE BUILD AND PUSH START ----------------------'
                echo '---------------------- DOCKER IMAGE BUILD AND PUSH END ----------------------'
            }
        }
        stage('CLEAN') {
            steps {
                echo '---------------------- CLEAN START ----------------------'
                sh 'rm -f ./*.jar'
                sh 'rm -f ./*.txt'
                echo '---------------------- CLEAN END ----------------------'
            }
        }
    }
}
