pipeline {
    agent any
    
    environment {
        // SRC_DIR
        src_dir = 'sso.oidc.api'
        // GITHUB_LINK
        github_ssh = 'git@github.com:sairupe/sso.oidc.api.git'
        github_https = 'https://github.com/sairupe/sso.oidc.api.git'
    }

    stages {
        stage('TOOLS INFO') {
            steps {
                echo '-------------------------------- TOOLS INFO --------------------------------'
				
                sh 'git --version'
                sh 'mvn -version'
                sh 'java -version'
                sh 'docker info'
				
                echo '-------------------------------- TOOLS INFO --------------------------------'
            }
        }
        stage('FETCH GIT') {
            steps {
                echo '-------------------------------- FETCH GIT --------------------------------'
				
                sh 'rm -f ./*.jar'
                //sh 'git clone ${github_https}'
                
                echo '-------------------------------- FETCH GIT --------------------------------'
            }
        }
        stage('MAVEN PACKAGE') {
            steps {
                echo '-------------------------------- MAVEN PACKAGE --------------------------------'
				
				sh 'mvn -f ./${src_dir}/pom.xml clean package -DskipTests=true'
				
                echo '-------------------------------- MAVEN PACKAGE --------------------------------'
            }
        }
        stage('DOCKER IMAGE BUILD AND PUSH') {
            steps {
                echo '-------------------------------- DOCKER IMAGE BUILD AND PUSH --------------------------------'
				
				// 移动JAR文件到工作目录下
				sh 'mv ${src_dir}/target/*.jar ./'
                script{
                    app_key = sh(returnStdout: true, script: "ls *.jar | sed 's/.jar//g' | cut -d '-' -f1")
                    tag = sh(returnStdout: true, script: "ls *.jar | sed 's/.jar//g' | cut -d '-' -f2")
                    version = sh(returnStdout: true, script: "ls *.jar | sed 's/.jar//g' | cut -d '-' -f3")
                }
                echo "---------- JAR info START ---------"
                echo "APP_KEY : ${app_key}"
                echo "TAG : ${tag}"
                echo "VERSTION : ${version}"
                echo "--------- JAR info END ----"
                
                sh "ls *.jar | xargs  -I  '{}'  mv  {}  app.jar" // app.jar in WORKSPACE
                sh 'docker build -t 12315:test -f /var/jenkins_home/dockerfile/SrvDockerfile .'
				
                echo '-------------------------------- DOCKER IMAGE BUILD AND PUSH --------------------------------'
            }
        }
        stage('CLEAN') {
            steps {
                echo '-------------------------------- CLEAN AFTER --------------------------------'
                sh 'rm -f ./*.jar'
                echo '-------------------------------- CLEAN AFTER --------------------------------'
            }
        }
    }
}
